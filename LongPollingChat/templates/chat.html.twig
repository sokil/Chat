{% extends "layout.html.twig" %}

{% block body %}
    <div class="row">
        <div class="col-8 col-md-8">
            <ul class="nav nav-pills" id="channels">
                <li data-channel="general"  class="nav-item"><a class="nav-link active" href="javascript:void(0)">General</a></li>
                <li data-channel="support" class="nav-item"><a class="nav-link" href="javascript:void(0)">Support</a></li>
                <li data-channel="info" class="nav-item"><a class="nav-link" href="javascript:void(0)">Info</a></li>
            </ul>
        </div>
        <div class="col-4 col-md-4 text-right">
            <a href="/logout" class="btn btn-danger" id="btnLogout">Log out</a>
        </div>
    </div>

    <div id="messages-container">
        <div id="messages"></div>
    </div>

    <form id="frmSend">
        <div class="input-group">
            <input type="text" name="message" class="form-control">
            <div class="input-group-append">
                <button type="submit" class="btn btn-primary">Send</button>
            </div>
        </div>
    </form>

    <script type="text/javascript">
        const $message = $('#frmSend input[name="message"]');
        const $messageList = $('#messages');
        const $channels = $('#channels');

        // get messages from queue
        let ETag = null;
        let time = null;
        let pollConnection = null;

        const startPoll = function(channel) {
            if (pollConnection) {
                // stop previous subscription if it was established
                pollConnection.abort();
            }

            pollConnection = $.ajax({
                method: 'GET',
                data: {
                    // channel may be separated by "/" to fetch from few channels
                    // backtrack may be specified to fetch old messages as channel + '.b10'
                    channel: channel
                },
                url: '/subscribe',
                success: function(response, textStatus, xhr) {
                    ETag = xhr.getResponseHeader('Etag');
                    time = xhr.getResponseHeader('Last-Modified');

                    if (response) {
                        let message = '[' + response.time + '] ' + '<b>' + response.nick + '</b> ' + response.text;
                        $messageList.prepend($('<div/>').html(message));
                    }

                    startPoll(channel);
                },
                dataType: 'json',
                headers: {
                    'If-None-Match': ETag,
                    'If-Modified-Since': time
                }
            });
        };

        // channel name to interact
        let channel = 'general';

        $channels.on('click', 'li', function(e) {
            $channels.find('a.nav-link').removeClass('active');
            const $li = $(this);
            $li.find('a.nav-link').addClass('active');

            channel = $li.data('channel');

            startPoll(channel);

            console.log('Selected channel: ' + channel);
        });

        // send message
        $('#frmSend').submit(function(e) {
            e.preventDefault();
            $.post(
                '/send',
                {
                    channel,
                    message: $message.val()
                },
                function(response) {
                    if (response && response.status === true) {
                        $message.val('');
                    }
                },
                'json'
            );
        });

        startPoll(channel);
    </script>
{% endblock %}
