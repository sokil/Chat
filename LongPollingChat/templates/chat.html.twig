{% extends "layout.html.twig" %}

{% block body %}
    <div class="row">
        <div class="col-8 col-md-8">
            <ul class="nav nav-pills" id="channels">
                <li data-channel="general"  class="nav-item"><a class="nav-link active" href="javascript:void(0)">General</a></li>
                <li data-channel="support" class="nav-item"><a class="nav-link" href="javascript:void(0)">Support</a></li>
                <li data-channel="info" class="nav-item"><a class="nav-link" href="javascript:void(0)">Info</a></li>
            </ul>
        </div>
        <div class="col-4 col-md-4 text-right">
            <a href="/logout" class="btn btn-danger" id="btnLogout">Log out</a>
        </div>
    </div>

    <div id="messages-container">
        <div id="messages"></div>
    </div>

    <form id="frmSend">
        <div class="input-group">
            <div class="input-group-prepend">
                <button id="btnTransportToggler" class="btn btn-outline-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">long-polling</button>
                <div class="dropdown-menu">
                    <a class="dropdown-item" href="#" data-transport="long-polling">long-polling</a>
                    <a class="dropdown-item" href="#" data-transport="websocket">websocket</a>
                    <a class="dropdown-item" href="#" data-transport="eventsource">eventsource</a>
                </div>
            </div>
            <input type="text" name="message" class="form-control">
            <div class="input-group-append">
                <button type="submit" class="btn btn-primary">Send</button>
            </div>
        </div>
    </form>

    <script type="text/javascript">
        // dom elements
        const $message = $('#frmSend input[name="message"]');
        const $messageList = $('#messages');
        const $channels = $('#channels');

        // current channel
        let channel = 'general';

        // get messages from long polling queue
        let longPollingConnection = null;
        const startLongPolling = function(channel) {
            if (longPollingConnection) {
                // stop previous subscription if it was established
                longPollingConnection.abort();
            }

            longPollingConnection = $.ajax({
                method: 'GET',
                data: {
                    // channel may be separated by "/" to fetch from few channels
                    // backtrack may be specified to fetch old messages as channel + '.b10'
                    channel: channel
                },
                url: '/subscribe',
                success: function(response, textStatus, xhr) {
                    if (response) {
                        appendMessage(response);
                    }

                    startLongPolling(channel);
                },
                dataType: 'json'
            });
        };

        // get messages from websocket queue
        const startWebSocket = function(channel) {
            const ws = new window.WebSocket('ws://longpolling/ws?channel=' + channel);
            ws.onmessage = function(e) {
                appendMessage(JSON.parse(e.data));
            };
        };

        // get messages from websocket queue
        const startEventSource = function(channel) {
            const es = new window.EventSource('http://longpolling/es?channel=' + channel);
            es.onmessage = function(e) {
                appendMessage(JSON.parse(e.data));
            };
        };

        // channel name to interact
        $channels.on('click', 'li', function(e) {
            $channels.find('a.nav-link').removeClass('active');
            const $li = $(this);
            $li.find('a.nav-link').addClass('active');

            channel = $li.data('channel');

            startLongPolling(channel);

            console.log('Selected channel: ' + channel);
        });

        // select transport
        $('[data-transport]').click(function() {
            const $btn = $(this);
            let transport = $btn.data('transport'); // any value allowed at push_stream_subscriber

            // stop prev transport
            if (transport !== 'long-polling') {
                if (longPollingConnection) {
                    longPollingConnection.abort();
                    longPollingConnection = null;
                }
            }

            // set new transport
            if (transport === 'websocket') {
                startWebSocket(channel);
            } else if (transport === 'eventsource') {
                startEventSource(channel);
            } else if (transport === 'long-polling') {
                startLongPolling(channel);
            }
        });

        // send message
        $('#frmSend').submit(function(e) {
            e.preventDefault();
            $.post(
                '/send',
                {
                    channel,
                    message: $message.val()
                },
                function(response) {
                    if (response && response.status === true) {
                        $message.val('');
                    }
                },
                'json'
            );
        });

        // message append
        let appendMessage = function(message) {
            // message format defined in route "in POST /send"
            let messageHTML = '[' + message.time + '] ' + '<b>' + message.nick + '</b> ' + message.text;
            $messageList.prepend($('<div/>').html(messageHTML));
        };

        // start initial transport
        startLongPolling(channel);
    </script>
{% endblock %}
